package com.cathacks2016.proxy;

import java.util.HashMap;
import java.util.Vector;

public class DefaultClientManager extends Thread{

	private HashMap<String, ServerConnection> server_socket_map;
	private HashMap<String, Vector<ClientConnection>> client_socket_map;

	public DefaultClientManager(HashMap<String, ServerConnection> server_socket_map, HashMap<String, Vector<ClientConnection>> client_socket_map) {
		this.server_socket_map = server_socket_map;
		this.client_socket_map = client_socket_map;
	}
	
	@Override
	public void run(){
		while( true ){
			// Check to see if a user in the default bucket it ready to be placed in a real bucket
			Vector<ClientConnection> default_clients = client_socket_map.get("default");
			
			for( ClientConnection client : default_clients ){
				client.update();
				
				// Check to see if they have timed out or disconnected
				if( !client.connected() || client.outOfTime() ){
					
				}
				
				// Check to see if they have requested a server
				String server_id = client.getServer();
				if( server_id != null ){
					// If selected server exists
					if( server_socket_map.containsKey(server_id) ){
						client.failedServerConnection();
						
					// If selected server does not exist
					}else{
						client.successfulServerConnection();
						
					}
				}
			}
		}
	}

}
