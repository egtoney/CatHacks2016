package com.cathacks2016.proxy.test;

import java.util.HashMap;
import java.util.Map.Entry;
import java.util.Vector;

public class ServerManager extends Thread{

	private HashMap<String, ServerConnection> server_socket_map;
	private HashMap<String, Vector<ClientConnection>> client_socket_map;

	public ServerManager(HashMap<String, ServerConnection> server_socket_map, HashMap<String, Vector<ClientConnection>> client_socket_map) {
		this.server_socket_map = server_socket_map;
		this.client_socket_map = client_socket_map;
	}
	
	@Override
	public void run(){
		while( true ){
			for( Entry<String, ServerConnection> server : server_socket_map.entrySet() ){
				// Check that the state of the server is good
				if( server.getValue().isConnected() ){
					server.getValue().update();
					
				// Remove the server and all of the connected clients if it is in a bad state
				}else{
					for( ClientConnection client : server.getValue().getClients() ){
						client.serverDisconnect();
					}
					
					server_socket_map.remove( server.getValue() );
				}
			}
		}
	}

}
